#Edited by Yusuf Hadiwinata I-3
#!/bin/bash
CONF_DIR="$(dirname $0)/.."
. "$CONF_DIR/backup.conf"

BACKUP_SAVE=""
smb_mount ()
{
        SMB_OPTIONS=""
        MOUNTED_URL=$(mount | grep "$SMB_URL" | sed -e 's/^.*on //g' -e 's/ type.*$//')

        # if smb isn't mounted yet
        if [ "$MOUNTED_URL" != "$SMB_MOUNT_DIR" ]
        then
                # mounting smb
                echo "Mounting samba file share to $SMB_MOUNT_DIR"
                if [ "$SMB_USER" == "guest" ]
                then
                        SMB_OPTIONS="${SMB_OPTIONS}guest"
                else
                        SMB_OPTIONS="${SMB_OPTIONS}username=${SMB_USER},password=${SMB_PASSWORD},domain=${SMB_DOMAIN}"
                fi

                mkdir -p "$SMB_MOUNT_DIR"
                mount.cifs "$SMB_URL" "$SMB_MOUNT_DIR" -o "$SMB_OPTIONS"
                if [ "$?" -ne 0 ]
                then
                        echo "Could not mount smb" >&2 
                        exit -1
                else
                        MOUNTED_URL="$SMB_MOUNT_DIR"
                fi
        else
                echo "SMB file share is already mounted on $MOUNTED_URL"
        fi
        BACKUP_SAVE="${MOUNTED_URL}/${BACKUP_DIR}"
}


FULL_TIMESTAMP=""
NOW_TIMESTAMP=""
generate_timestamp ()
{
	FULL_DAY_NUM=$(date -d "${FULL_DAY}" +%w)
	NOW_NUM=$(date +%w)
	if [ "$NOW_NUM" -ge "$FULL_DAY_NUM" ]
	then
		DAYS_AGO_NUM=$[NOW_NUM-FULL_DAY_NUM]
	else
		DAYS_AGO_NUM=$[7+NOW_NUM-FULL_DAY_NUM]
	fi
	FULL_TIMESTAMP=$(date -d "${DAYS_AGO_NUM} days ago" +%F)
	NOW_TIMESTAMP=$(date +%F)
}


backup_zimbra()
{
	ZIMBRA_SAVE="$BACKUP_SAVE/zimbra/$FULL_TIMESTAMP"
	mkdir -p "$ZIMBRA_SAVE"

	ZIMBRA_INDEX_DIR="$ZIMBRA_DIR/index"
	ZIMBRA_STORE_DIR="$ZIMBRA_DIR/store"
	ZIMBRA_LDAP_DIR="$ZIMBRA_DIR/data/ldap"
	ZIMBRA_ZMSLAPCAT="$ZIMBRA_DIR/libexec/zmslapcat"
	ZIMBRA_MYSQLDUMP="$ZIMBRA_DIR/mysql/bin/mysqldump"
	ZIMBRA_LOCALCONFIG="$ZIMBRA_DIR/conf/localconfig.xml"
	ZIMBRA_ZMLOCALCONFIG="$ZIMBRA_DIR/bin/zmlocalconfig"
	ZIMBRA_MYSQLSOCK="$ZIMBRA_DIR/db/mysql.sock"

	cp "$ZIMBRA_LOCALCONFIG" "$ZIMBRA_SAVE/$(basename $ZIMBRA_LOCALCONFIG).$NOW_TIMESTAMP"

	ZIMBRA_LDAP_TMP="/tmp/zimbra_backup_$NOW_TIMESTAMP"
	mkdir -p "$ZIMBRA_LDAP_TMP"
	chown zimbra:zimbra "$ZIMBRA_LDAP_TMP"
	su - zimbra -c "$ZIMBRA_ZMSLAPCAT $ZIMBRA_LDAP_TMP"
	mv "$ZIMBRA_LDAP_TMP/ldap.bak" "$ZIMBRA_SAVE/ldap.bak.$NOW_TIMESTAMP"
	rm -rf "$ZIMBRA_LDAP_TMP"

	su - zimbra -c "$ZIMBRA_MYSQLDUMP -f -S $ZIMBRA_MYSQLSOCK -u root --password=`$ZIMBRA_ZMLOCALCONFIG -s -m nokey mysql_root_password` --all-databases --single-transaction --flush-logs > /tmp/mysql.sql.$NOW_TIMESTAMP"
#	su - zimbra -c "$ZIMBRA_MYSQLDUMP -f -S $ZIMBRA_MYSQLSOCK -u zimbra --password=`$ZIMBRA_ZMLOCALCONFIG -s -m nokey zimbra_mysql_password` --all-databases --single-transaction > /tmp/mysql.sql.$NOW_TIMESTAMP"
	mv /tmp/mysql.sql.$NOW_TIMESTAMP "$ZIMBRA_SAVE"

	export PASSPHRASE="$DUPLICITY_PASSPHRASE"
	"$DUPLICITY" "$ZIMBRA_INDEX_DIR" "file:///$ZIMBRA_SAVE/$(basename $ZIMBRA_INDEX_DIR)"
	"$DUPLICITY" "$ZIMBRA_STORE_DIR" "file:///$ZIMBRA_SAVE/$(basename $ZIMBRA_STORE_DIR)"

	echo "Deleting old zimbra backup"
	del_old "${ZIMBRA_SAVE}/.."
}


del_old()
{
	if [ "$MAX_KEEP" -ne 0 ]
	then
		IFS=$'\n'
		DIR_DEL="$(find "$1" -maxdepth 1 -mtime +${MAX_KEEP} -and -not -path "$1")"
		for i in $DIR_DEL
		do
			echo "Deleting $i"
			rm -rf "$i"
		done
		unset IFS

	else
		echo "Not configured to delete old backup"
	fi
}


if [ "$URL_TYPE" == "smb" ]
then
	smb_mount
else
	BACKUP_SAVE="$BACKUP_DIR"
fi
echo "Backup will be saved in $BACKUP_SAVE"

generate_timestamp
FILENAME="$(basename $0)"
EXTENSION="${FILENAME##*.}"

BACKUP_ARG="$EXTENSION"
case "$EXTENSION" in
	zimbra);;
	*)
		BACKUP_ARG="$*";;
esac

if [ -z "$BACKUP_ARG" ]
then
	BACKUP_ARG="zimbra"
fi

for BAK in $BACKUP_ARG
do
	case "$BAK" in
		zimbra) echo "Backuping Zimbra"
			backup_zimbra 
			;;
	esac
done

